var i, t;
i = this;

t = function (i) {
  (function () {
    var t = i,
      o = t.lib.StreamCipher,
      f = [],
      s = [],
      c = [],
      n = (t.algo.Rabbit = o.extend({
        _doReset: function () {
          for (var i = this._key.words, t = this.cfg.iv, o = 0; o < 4; o++) i[o] = (16711935 & ((i[o] << 8) | (i[o] >>> 24))) | (4278255360 & ((i[o] << 24) | (i[o] >>> 8)));

          var f = (this._X = [i[0], (i[3] << 16) | (i[2] >>> 16), i[1], (i[0] << 16) | (i[3] >>> 16), i[2], (i[1] << 16) | (i[0] >>> 16), i[3], (i[2] << 16) | (i[1] >>> 16)]),
            s = (this._C = [
              (i[2] << 16) | (i[2] >>> 16),
              (4294901760 & i[0]) | (65535 & i[1]),
              (i[3] << 16) | (i[3] >>> 16),
              (4294901760 & i[1]) | (65535 & i[2]),
              (i[0] << 16) | (i[0] >>> 16),
              (4294901760 & i[2]) | (65535 & i[3]),
              (i[1] << 16) | (i[1] >>> 16),
              (4294901760 & i[3]) | (65535 & i[0]),
            ]);
          this._b = 0;

          for (o = 0; o < 4; o++) h.call(this);

          for (o = 0; o < 8; o++) s[o] ^= f[(o + 4) & 7];

          if (t) {
            var c = t.words,
              n = c[0],
              _ = c[1],
              b = (16711935 & ((n << 8) | (n >>> 24))) | (4278255360 & ((n << 24) | (n >>> 8))),
              v = (16711935 & ((_ << 8) | (_ >>> 24))) | (4278255360 & ((_ << 24) | (_ >>> 8))),
              l = (b >>> 16) | (4294901760 & v),
              p = (v << 16) | (65535 & b);
            s[0] ^= b;
            s[1] ^= l;
            s[2] ^= v;
            s[3] ^= p;
            s[4] ^= b;
            s[5] ^= l;
            s[6] ^= v;
            s[7] ^= p;

            for (o = 0; o < 4; o++) h.call(this);
          }
        },
        _doProcessBlock: function (i, t) {
          var o = this._X;
          h.call(this);
          f[0] = o[0] ^ (o[5] >>> 16) ^ (o[3] << 16);
          f[1] = o[2] ^ (o[7] >>> 16) ^ (o[5] << 16);
          f[2] = o[4] ^ (o[1] >>> 16) ^ (o[7] << 16);
          f[3] = o[6] ^ (o[3] >>> 16) ^ (o[1] << 16);

          for (var s = 0; s < 4; s++) {
            f[s] = (16711935 & ((f[s] << 8) | (f[s] >>> 24))) | (4278255360 & ((f[s] << 24) | (f[s] >>> 8)));
            i[t + s] ^= f[s];
          }
        },
        blockSize: 4,
        ivSize: 2,
      }));

    function h() {
      for (var i = this._X, t = this._C, o = 0; o < 8; o++) s[o] = t[o];

      t[0] = (t[0] + 1295307597 + this._b) | 0;
      t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < s[0] >>> 0 ? 1 : 0)) | 0;
      t[2] = (t[2] + 886263092 + (t[1] >>> 0 < s[1] >>> 0 ? 1 : 0)) | 0;
      t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < s[2] >>> 0 ? 1 : 0)) | 0;
      t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < s[3] >>> 0 ? 1 : 0)) | 0;
      t[5] = (t[5] + 886263092 + (t[4] >>> 0 < s[4] >>> 0 ? 1 : 0)) | 0;
      t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < s[5] >>> 0 ? 1 : 0)) | 0;
      t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < s[6] >>> 0 ? 1 : 0)) | 0;
      this._b = t[7] >>> 0 < s[7] >>> 0 ? 1 : 0;

      for (o = 0; o < 8; o++) {
        var f = i[o] + t[o],
          n = 65535 & f,
          h = f >>> 16,
          _ = ((((n * n) >>> 17) + n * h) >>> 15) + h * h,
          b = (((4294901760 & f) * f) | 0) + (((65535 & f) * f) | 0);

        c[o] = _ ^ b;
      }

      i[0] = (c[0] + ((c[7] << 16) | (c[7] >>> 16)) + ((c[6] << 16) | (c[6] >>> 16))) | 0;
      i[1] = (c[1] + ((c[0] << 8) | (c[0] >>> 24)) + c[7]) | 0;
      i[2] = (c[2] + ((c[1] << 16) | (c[1] >>> 16)) + ((c[0] << 16) | (c[0] >>> 16))) | 0;
      i[3] = (c[3] + ((c[2] << 8) | (c[2] >>> 24)) + c[1]) | 0;
      i[4] = (c[4] + ((c[3] << 16) | (c[3] >>> 16)) + ((c[2] << 16) | (c[2] >>> 16))) | 0;
      i[5] = (c[5] + ((c[4] << 8) | (c[4] >>> 24)) + c[3]) | 0;
      i[6] = (c[6] + ((c[5] << 16) | (c[5] >>> 16)) + ((c[4] << 16) | (c[4] >>> 16))) | 0;
      i[7] = (c[7] + ((c[6] << 8) | (c[6] >>> 24)) + c[5]) | 0;
    }

    t.Rabbit = o._createHelper(n);
  })();

  return i.Rabbit;
};

if ('object' == typeof exports) module.exports = exports = t(require('crypto-js'), require('./902'), require('./903'), require('./898'), require('./897'));
else if ('function' == typeof define && define.amd) define(['./core', './enc-base64', './md5', './evpkdf', './cipher-core'], t);
else t(i.CryptoJS);
