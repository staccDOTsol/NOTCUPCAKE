function t() {
  if (!(this instanceof t)) return new t();

  require('./984').BlockHash.call(this);

  this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  this.endian = 'little';
}

function h(t, h, s, n) {
  return t <= 15 ? h ^ s ^ n : t <= 31 ? (h & s) | (~h & n) : t <= 47 ? (h | ~s) ^ n : t <= 63 ? (h & n) | (s & ~n) : h ^ (s | ~n);
}

function s(t) {
  return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
}

function n(t) {
  return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
}

require('./983').inherits(t, require('./984').BlockHash);

exports.ripemd160 = t;
t.blockSize = 512;
t.outSize = 160;
t.hmacStrength = 192;
t.padLength = 64;

t.prototype._update = function (t, c) {
  for (var _ = this.h[0], f = this.h[1], p = this.h[2], k = this.h[3], v = this.h[4], H = _, S = f, x = p, y = k, z = v, B = 0; B < 80; B++) {
    var module983 = require('./983').sum32(require('./983').rotl32(require('./983').sum32_4(_, h(B, f, p, k), t[r[B] + c], s(B)), o[B]), v);

    _ = v;
    v = k;
    k = require('./983').rotl32(p, 10);
    p = f;
    f = module983;
    module983 = require('./983').sum32(require('./983').rotl32(require('./983').sum32_4(H, h(79 - B, S, x, y), t[u[B] + c], n(B)), l[B]), z);
    H = z;
    z = y;
    y = require('./983').rotl32(x, 10);
    x = S;
    S = module983;
  }

  module983 = require('./983').sum32_3(this.h[1], p, y);
  this.h[1] = require('./983').sum32_3(this.h[2], k, z);
  this.h[2] = require('./983').sum32_3(this.h[3], v, H);
  this.h[3] = require('./983').sum32_3(this.h[4], _, S);
  this.h[4] = require('./983').sum32_3(this.h[0], f, x);
  this.h[0] = module983;
};

t.prototype._digest = function (t) {
  return 'hex' === t ? require('./983').toHex32(this.h, 'little') : require('./983').split32(this.h, 'little');
};

var r = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    7,
    4,
    13,
    1,
    10,
    6,
    15,
    3,
    12,
    0,
    9,
    5,
    2,
    14,
    11,
    8,
    3,
    10,
    14,
    4,
    9,
    15,
    8,
    1,
    2,
    7,
    0,
    6,
    13,
    11,
    5,
    12,
    1,
    9,
    11,
    10,
    0,
    8,
    12,
    4,
    13,
    3,
    7,
    15,
    14,
    5,
    6,
    2,
    4,
    0,
    5,
    9,
    7,
    12,
    2,
    10,
    14,
    1,
    3,
    8,
    11,
    6,
    15,
    13,
  ],
  u = [
    5,
    14,
    7,
    0,
    9,
    2,
    11,
    4,
    13,
    6,
    15,
    8,
    1,
    10,
    3,
    12,
    6,
    11,
    3,
    7,
    0,
    13,
    5,
    10,
    14,
    15,
    8,
    12,
    4,
    9,
    1,
    2,
    15,
    5,
    1,
    3,
    7,
    14,
    6,
    9,
    11,
    8,
    12,
    2,
    10,
    0,
    4,
    13,
    8,
    6,
    4,
    1,
    3,
    11,
    15,
    0,
    5,
    12,
    2,
    13,
    9,
    7,
    10,
    14,
    12,
    15,
    10,
    4,
    1,
    5,
    8,
    7,
    6,
    2,
    13,
    14,
    0,
    3,
    9,
    11,
  ],
  o = [
    11,
    14,
    15,
    12,
    5,
    8,
    7,
    9,
    11,
    13,
    14,
    15,
    6,
    7,
    9,
    8,
    7,
    6,
    8,
    13,
    11,
    9,
    7,
    15,
    7,
    12,
    15,
    9,
    11,
    7,
    13,
    12,
    11,
    13,
    6,
    7,
    14,
    9,
    13,
    15,
    14,
    8,
    13,
    6,
    5,
    12,
    7,
    5,
    11,
    12,
    14,
    15,
    14,
    15,
    9,
    8,
    9,
    14,
    5,
    6,
    8,
    6,
    5,
    12,
    9,
    15,
    5,
    11,
    6,
    8,
    13,
    12,
    5,
    12,
    13,
    14,
    11,
    8,
    5,
    6,
  ],
  l = [
    8,
    9,
    9,
    11,
    13,
    15,
    15,
    5,
    7,
    7,
    8,
    11,
    14,
    14,
    12,
    6,
    9,
    13,
    15,
    7,
    12,
    8,
    9,
    11,
    7,
    7,
    12,
    7,
    6,
    15,
    13,
    11,
    9,
    7,
    15,
    11,
    8,
    6,
    6,
    14,
    12,
    13,
    5,
    14,
    13,
    13,
    7,
    5,
    15,
    5,
    8,
    11,
    14,
    14,
    6,
    14,
    6,
    9,
    12,
    9,
    12,
    5,
    15,
    8,
    8,
    5,
    12,
    9,
    12,
    5,
    14,
    6,
    8,
    13,
    6,
    5,
    15,
    13,
    11,
    11,
  ];
